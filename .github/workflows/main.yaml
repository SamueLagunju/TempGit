name: MedTel Deploy Workflow

on:
  pull_request:
  push:
    branches:
      - "master"
      - "*"
  schedule:
    - cron: "0 0 * * *"

env:
  FIRST_APP: firstApp
  SECOND_APP: secondApp
  ANOTHER_APP: anotherApp

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app_name: [firstApp, secondApp, anotherApp]
    defaults:
      run:
        working-directory: apps/${{ matrix.app_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node 12.x
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          branch-name: ${{ github.ref }}
          build-name: ${{ matrix.app_name }}
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.branch-name}}-${{ env.build-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.branch-name }}-${{ env.build-name }}
            ${{ runner.os }}-build-${{ env.branch-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Persist build files
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.run_id }}_BUILD
          path: apps/${{ matrix.app_name }}/www
  deploy:
    name: Deploy to Github Pages
    # if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # TODO Clean this
      - name: Retrieve build files
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.run_id }}_BUILD
          path: apps/firstApp/www
      - name: Retrieve build files
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.run_id }}_BUILD
          path: apps/secondApp/www
      - name: Retrieve build files
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.run_id }}_BUILD
          path: apps/anotherApp/www
      - name: Create deploy folder
        run: |
          mkdir ${{ github.workspace }}/deploy
          mkdir ${{ github.workspace }}/deploy/apps
          mkdir ${{ github.workspace }}/deploy/apps/FirstWebApp
          mkdir ${{ github.workspace }}/deploy/apps/SecondWebApp
          mkdir ${{ github.workspace }}/deploy/apps/AnotherWebApp
      - name: Copy to FirstWebApp to deploy folder
        run: cp -r apps/firstApp/www ${{ github.workspace }}/deploy/apps/FirstWebApp
      - name: Copy to Second to deploy folder
        run: cp -r apps/secondApp/www ${{ github.workspace }}/deploy/apps/SecondWebApp
      - name: Copy to Third to deploy folder
        run: cp -r apps/anotherApp/www ${{ github.workspace }}/deploy/apps/AnotherWebApp
      - name: Copy root app to deploy folder
        run: |
          cp ${{ github.workspace }}/index.html ${{ github.workspace }}/deploy
          cp -r ${{ github.workspace }}/css ${{ github.workspace }}/deploy
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          BRANCH: gh-pages
          FOLDER: deploy
