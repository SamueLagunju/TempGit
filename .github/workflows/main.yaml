name: MedTel Deploy Workflow

on:
  pull_request:
  push:
    branches:
      - "master"
      - "*"
  schedule:
    - cron: "0 0 * * *"

# TODO use these
env:
  FIRST_APP: firstApp
  SECOND_APP: secondApp
  ANOTHER_APP: anotherApp

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app_name: [firstApp, secondApp, anotherApp]
    defaults:
      run:
        working-directory: apps/${{ matrix.app_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node 12.x
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          branch-name: ${{ github.ref }}
          build-name: ${{ matrix.app_name }}
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.branch-name}}-${{ env.build-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.branch-name }}-${{ env.build-name }}
            ${{ runner.os }}-build-${{ env.branch-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Persist build files
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.run_id }}_BUILD_${{ matrix.app_name }}
          path: apps/${{ matrix.app_name }}/www

  collect_root_app:
    name: Collect root app to deploy folder
    # if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create deploy folder
        run: |
          mkdir deploy
      - name: Copy root app to deploy folder
        run: |
          cp index.html deploy
          cp -r css deploy
      - name: Persist build files
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.run_id }}_DEPLOY
          path: deploy

  collect_builds:
    name: Collect builds to deploy folder
    # if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        app_name: [firstApp, secondApp, anotherApp]
    defaults:
      run:
        working-directory: apps/${{ matrix.app_name }}
    steps:
      - name: Retrieve build files
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.run_id }}_BUILD_${{ matrix.app_name }}
          path: apps/${{ matrix.app_name }}/www
      - name: Create deploy folder
        run: |
          mkdir deploy
          mkdir deploy/apps
          mkdir deploy/apps/${{ matrix.app_name }}
      - name: Copy to ${{ matrix.app_name }} to deploy folder
        run: cp -r www ${{ github.workspace }}/deploy/apps/${{ matrix.app_name }}
      - name: Persist deploy files
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.run_id }}_DEPLOY
          path: deploy

  deploy:
    name: Deploy to Github Pages
    # if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs:
      - collect_builds
      - collect_root_app
    steps:
      - name: Retrieve deploy files
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.run_id }}_DEPLOY
          path: deploy
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: deploy
